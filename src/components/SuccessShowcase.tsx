import { Badge } from "@/components/ui/badge";
import successIoTAI from "@/assets/success-iot-ai-make.jpg";
import successChatbot from "@/assets/success-chatbot-stripe-sheets.jpg";
import successWebhook from "@/assets/success-webhook-gpt-email.jpg";
import successVoiceBot from "@/assets/success-voice-bot-crm.jpg";
import successHomeAuto from "@/assets/success-home-automation.jpg";
import successTelegram from "@/assets/success-telegram-notion-gpt.jpg";
import successROI from "@/assets/success-roi-dashboard.jpg";
import successIoTAgriculture from "@/assets/success-iot-agriculture.jpg";
import successIoTSmartCity from "@/assets/success-iot-smart-city.jpg";
import successIoTManufacturing from "@/assets/success-iot-manufacturing.jpg";
import successIoTHealthcare from "@/assets/success-iot-healthcare.jpg";
import { useLanguage } from "@/contexts/LanguageContext";

const SuccessShowcase = () => {
  const { locale } = useLanguage();

  const getSuccessData = () => {
    if (locale === 'ua') {
      return [
        {
          image: successROI,
          title: "ROI +340%",
          subtitle: "–ê–Ω–∞–ª—ñ—Ç–∏—á–Ω–∏–π –¥–∞—à–±–æ—Ä–¥",
          description: "Dashboard –∑ —Ä–æ—Å—Ç–æ–º –ø—ñ—Å–ª—è –≤–ø—Ä–æ–≤–∞–¥–∂–µ–Ω–Ω—è",
          icon: "üìà"
        },
        {
          image: successIoTAgriculture,
          title: "IoT –°—ñ–ª—å—Å—å–∫–µ –ì–æ—Å–ø–æ–¥–∞—Ä—Å—Ç–≤–æ",
          subtitle: "–†–æ–∑—É–º–Ω–µ —Ñ–µ—Ä–º–µ—Ä—Å—Ç–≤–æ",
          description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏, –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –≥—Ä—É–Ω—Ç—É —Ç–∞ —Å—Ç–∞–Ω—É –≤—Ä–æ–∂–∞—é",
          icon: "üåæ"
        },
        {
          image: successChatbot,
          title: "E-commerce –±–æ—Ç",
          subtitle: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è –ø—Ä–æ–¥–∞–∂—ñ–≤",
          description: "–ß–∞—Ç-–±–æ—Ç –∑ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é Stripe —Ç–∞ Google Sheets",
          icon: "üí¨"
        },
        {
          image: successIoTSmartCity,
          title: "IoT –†–æ–∑—É–º–Ω–µ –ú—ñ—Å—Ç–æ",
          subtitle: "–ú—ñ—Å—å–∫–∞ —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞",
          description: "–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ç—Ä–∞—Ñ—ñ–∫—É, —è–∫–æ—Å—Ç—ñ –ø–æ–≤—ñ—Ç—Ä—è —Ç–∞ —Ä–æ–∑—É–º–Ω–æ–≥–æ –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è",
          icon: "üèôÔ∏è"
        },
        {
          image: successVoiceBot,
          title: "Voice AI –∞—Å–∏—Å—Ç–µ–Ω—Ç",
          subtitle: "–ì–æ–ª–æ—Å–æ–≤–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞",
          description: "Call tracking –∑ AI –æ–±—Ä–æ–±–∫–æ—é —Ä–æ–∑–º–æ–≤",
          icon: "üìû"
        },
        {
          image: successIoTManufacturing,
          title: "IoT –í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ",
          subtitle: "–Ü–Ω–¥—É—Å—Ç—Ä—ñ—è 4.0",
          description: "–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –≤–∏—Ä–æ–±–Ω–∏—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤",
          icon: "üè≠"
        },
        {
          image: successHomeAuto,
          title: "–†–æ–∑—É–º–Ω–∏–π –¥—ñ–º",
          subtitle: "IoT –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è",
          description: "Home automation –∑ –º–∞—à–∏–Ω–Ω–∏–º –Ω–∞–≤—á–∞–Ω–Ω—è–º",
          icon: "üè†"
        },
        {
          image: successIoTHealthcare,
          title: "IoT Healthcare",
          subtitle: "–ú–µ–¥–∏—á–Ω–∏–π –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥",
          description: "–°–∏—Å—Ç–µ–º–∞ –≤—ñ–¥–¥–∞–ª–µ–Ω–æ–≥–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –ø–∞—Ü—ñ—î–Ω—Ç—ñ–≤ –∑ –Ω–æ—Å–∏–º–∏–º–∏ –ø—Ä–∏—Å—Ç—Ä–æ—è–º–∏",
          icon: "üè•"
        }
      ];
    } else if (locale === 'no') {
      return [
        {
          image: successROI,
          title: "ROI +340%",
          subtitle: "Analytics Dashboard",
          description: "Dashboard med vekst etter implementering",
          icon: "üìà"
        },
        {
          image: successIoTAgriculture,
          title: "IoT Landbruk",
          subtitle: "Smart jordbruk",
          description: "Automatisk kontroll av temperatur, jordfuktighet og avlingsstatus",
          icon: "üåæ"
        },
        {
          image: successChatbot,
          title: "E-handel bot",
          subtitle: "Salgsautomatisering",
          description: "Chatbot med Stripe og Google Sheets integrasjon",
          icon: "üí¨"
        },
        {
          image: successHomeAuto,
          title: "Smart hjem",
          subtitle: "IoT automatisering",
          description: "Hjemmeautomatisering med maskinl√¶ring",
          icon: "üè†"
        }
      ];
    } else {
      return [
        {
          image: successROI,
          title: "ROI +340%",
          subtitle: "Analytics Dashboard",
          description: "Dashboard with growth after implementation",
          icon: "üìà"
        },
        {
          image: successIoTAgriculture,
          title: "IoT Agriculture",
          subtitle: "Smart Farming",
          description: "Automatic control of temperature, soil moisture and crop status",
          icon: "üåæ"
        },
        {
          image: successChatbot,
          title: "E-commerce Bot",
          subtitle: "Sales Automation",
          description: "Chatbot with Stripe and Google Sheets integration",
          icon: "üí¨"
        },
        {
          image: successHomeAuto,
          title: "Smart Home",
          subtitle: "IoT Automation",
          description: "Home automation with machine learning",
          icon: "üè†"
        }
      ];
    }
  };

  const getTitle = () => {
    if (locale === 'ua') return "–∞–≤—Ç–æ–º–∞—Ç–∏–∑—É—î–º–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –∫–æ–º–ø–∞–Ω—ñ—ó —Ç–∞ –ø—ñ–¥–ø—Ä–∏—î–º—Ü—ñ–≤";
    if (locale === 'no') return "V√•re vellykkede l√∏sninger";
    return "Our Successful Solutions";
  };

  const getSubtitle = () => {
    if (locale === 'ua') return "—É—Å–ø—ñ—à–Ω—ñ –ø—Ä–æ–µ–∫—Ç–∏";
    if (locale === 'no') return "Reelle resultater fra norske bedrifter som stolte p√• v√•re l√∏sninger";
    return "Real results from European companies that trusted our solutions";
  };

  const getBadge = () => {
    if (locale === 'ua') return "üèÜ –£—Å–ø—ñ—à–Ω—ñ –ø—Ä–æ—î–∫—Ç–∏";
    if (locale === 'no') return "üèÜ V√•re vellykkede prosjekter";
    return "üèÜ Our Successful Projects";
  };

  const getTagline = () => {
    if (locale === 'ua') return "100% —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É";
    if (locale === 'no') return "100% norske l√∏sninger for norsk n√¶ringsliv";
    return "100% European solutions for European business";
  };

  const getFlag = () => {
    if (locale === 'ua') return "üá∫üá¶";
    if (locale === 'no') return "üá≥üá¥";
    return "üá™üá∫";
  };

  return (
    <section className="py-16 success-section-gradient relative overflow-hidden">
      <div className="absolute inset-0 opacity-10">
        <div className="absolute top-0 left-0 w-full h-full" 
             style={{
               backgroundImage: `url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='4'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")`,
             }}
        />
      </div>
      <div className="container mx-auto px-4 relative z-10">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">
            {getSubtitle()}
          </h2>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          {getSuccessData().map((item, index) => (
            <div key={index} className="card-premium interactive-hover animate-scale-in" style={{ animationDelay: `${index * 0.1}s` }}>
              <div className="aspect-video relative overflow-hidden rounded-t-xl">
                <img 
                  src={item.image} 
                  alt={item.title}
                  className="w-full h-full object-cover group-hover:scale-110 transition-smooth"
                />
                <div className="absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent"></div>
                <div className="absolute top-4 right-4 text-3xl animate-float" style={{ animationDelay: `${index * 0.2}s` }}>
                  {item.icon}
                </div>
                <div className="absolute bottom-4 left-4">
                  <div className="glass-ukraine px-3 py-1 rounded-full text-white text-sm font-bold">
                    –ù–æ–≤–∏–π –∫–µ–π—Å
                  </div>
                </div>
              </div>
              
              <div className="p-6">
                <h3 className="font-bold text-xl mb-2 text-gradient-premium font-display">{item.title}</h3>
                <p className="font-semibold text-primary mb-3">{item.subtitle}</p>
                <p className="text-sm text-muted-foreground leading-relaxed">{item.description}</p>
                
                {/* Performance indicator */}
                <div className="mt-4 pt-4 border-t border-border">
                  <div className="flex items-center justify-between text-xs">
                    <span className="text-muted-foreground">–†–µ–∑—É–ª—å—Ç–∞—Ç:</span>
                    <span className="font-bold text-success">+200% –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ</span>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>

        <div className="text-center mt-16">
          <div className="card-premium inline-flex items-center gap-4 px-10 py-6 animate-glow">
            <span className="text-4xl animate-float">{getFlag()}</span>
            <div className="text-left">
              <div className="font-bold text-xl text-gradient-premium font-display">
                {getTagline()}
              </div>
              <div className="text-sm text-muted-foreground">
                –ü—Ä–∞—Ü—é—î–º–æ –≤–∏–∫–ª—é—á–Ω–æ –¥–ª—è —É—Å–ø—ñ—Ö—É —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default SuccessShowcase;